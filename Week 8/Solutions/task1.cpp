#include <iostream>
#include <stack>

/**
	Функция, която по подадена РЕФЕРЕНЦИЯ към стек от цели числа
	въвежда в нея числа от клавиатурата докато не достигне 0

	@param[in] st референция към стек от цели числа
*/
void inputStack(std::stack<int>& st) {
	int input;		///Променливата, в която ще помним текущото въведено число от клавиатурата

	///Правим безкраен цикъл. Логиката, която ще го прекъсне, ще е в цикъла!
	while (1) {
		std::cin >> input;

		if (input == 0) {
			break;
		}

		st.push(input); /// "Слагаме" текущата стойност на върха на стака
	}
}


/**
	Функция, която по подадено КОПИЕ на стек от цели числа
	изписва елементите на стека от най-горен към най-долен

	@param[in] st стека от цели числа, който принтираме
*/
void printStack(std::stack<int>& st) {
	///Докато стека не е празен
	while (st.size() != 0) {
		std::cout << st.top() << " "; ///Изписваме най-горната стойност
		st.pop();					  ///И след това я трием
	}
	std::cout << '\n';
}


/**
    Фунцкия, която обръща подаден стек в друг стек и  го връща

    @param[in] st Стека, който обръщаме

    @returns res Обърнатия стек
*/
std::stack<int> reverseStack(std::stack<int> st){
    std::stack<int> res;    ///Създаваме си нов стек

    ///Обхождаме елементно подадения стек
    while(!st.empty()){
        ///Като сложим най-горния елемент на подадения стек
        ///и го пъхнем в резултатния стек обръщаме подредбата
        res.push(st.top());
        st.pop();
    }

    return res;
}

int main(){
    std::stack<int> st, res;
    inputStack(st);
    res = reverseStack(st);
    printStack(res);
}
