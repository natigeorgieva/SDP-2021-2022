#include <iostream>
#include <stack>

/**
	Функция, която по подадено КОПИЕ на стек от цели числа
	изписва елементите на стека от най-горен към най-долен

	@param[in] st стека от цели числа, който принтираме
*/
void printStack(std::stack<int>& st) {
	///Докато стека не е празен
	while (st.size() != 0) {
		std::cout << st.top() << " "; ///Изписваме най-горната стойност
		st.pop();					  ///И след това я трием
	}
	std::cout << '\n';
}


/**
    Фунцкия намираща всички числа на Фибоначи до n запазваща ги в стек.
    Резулатния стек се връща от фунцкията.
*/
std::stack<int> fibStack(int n){
 std::stack<int> fib;   ///Съзадаваме стека в който че пазим числата
 fib.push(0);           ///Задаваме двете стартиращи стойности
 fib.push(1);

 int temp,         ///Променлива, в която ще пазим най-горния елемент на стека
     currRes;      ///Текущото пресметнато число от горните два елемента на стека

 for(int i = 0 ; i< n - 1 ; i++){
    temp = fib.top();       ///Запазваме си горния на елемент на стека
    fib.pop();              ///Премахваме го, за да достъпим долния елемент

    currRes = fib.top() + temp; ///Сумата на двата елемета от стека образуват новото число

    ///Връщаме в правилна последователност елементите в стека
    fib.push(temp);
    fib.push(currRes);
 }

 return fib;
}

int main(){
    std::stack<int> res = fibStack(10);
    printStack(res);
}
