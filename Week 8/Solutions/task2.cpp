#include <iostream>
#include <stack>

/**
	Функция, която по подадена РЕФЕРЕНЦИЯ към стек от цели числа
	въвежда в нея числа от клавиатурата докато не достигне 0

	@param[in] st референция към стек от цели числа
*/
void inputStack(std::stack<int>& st) {
	int input;		///Променливата, в която ще помним текущото въведено число от клавиатурата

	///Правим безкраен цикъл. Логиката, която ще го прекъсне, ще е в цикъла!
	while (1) {
		std::cin >> input;

		if (input == 0) {
			break;
		}

		st.push(input); /// "Слагаме" текущата стойност на върха на стака
	}
}


/**
	Функция, която по подадено КОПИЕ на стек от цели числа
	изписва елементите на стека от най-горен към най-долен

	@param[in] st стека от цели числа, който принтираме
*/
void printStack(std::stack<int>& st) {
	///Докато стека не е празен
	while (st.size() != 0) {
		std::cout << st.top() << " "; ///Изписваме най-горната стойност
		st.pop();					  ///И след това я трием
	}
	std::cout << '\n';
}


/**
    Функция, която проверява дали в подаден стек елементите му образуват палиндром

    @param[in] st стека от цели числа, който ще проверяваме за палиндром

    @returns Булева стойност true - стека е палииндорм, false - стека не е палиндром
*/
bool isPalindrome(std::stack<int> st){
    std::stack<int> halfStack;      ///Нов стек, който ще съдържа горната половина елементи на подадения стек

    ///Флаг, с който следим дали текущия стек е палиндром
    ///По подаразбиране е палиндром, ако установим по някое време, че не е сваляме флага(false)
    bool flag = true;

    int halfSize = st.size()/2; ///Намираме колко елемента ще прехвърлим

    ///Прехвърляме елементите от подадения стек в горно създадения
    for(int i = 0; i < halfSize; i++){
        halfStack.push(st.top());
        st.pop();
    }

    ///Ако броя елементи е нечетен премахваме средния останал елемент
    if(st.size()%2){
        st.pop();
    }

    ///Проверяваме дали всеки горни два елемента си съвпадат, ако открием противоречие сваляме
    ///флага и прекратяваме проверката дали е палиндром
    for(int i = 0; i < halfSize; i++){
        if(st.top() != halfStack.top()){
            flag = false;
            break;
        }
        st.pop();
        halfStack.pop();
    }

    return flag; ///Връщаме крайната стойност
}

int main() {
    std::stack<int> inpt;

    inputStack(inpt);
    printStack(inpt);

    std::cout<<"Is the stack palindrome : "<<(isPalindrome(inpt) ? "Yes" : "No");
}
